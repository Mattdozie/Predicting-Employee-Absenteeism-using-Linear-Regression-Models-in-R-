absenteeism <- read.csv("C:/Users/User-Dell/Desktop/absenteeism.csv")
View(absenteeism)
data<-absenteeism
View(data)
absenteeismA <- read.csv("C:/Users/User-Dell/Desktop/absenteeismA.csv")
View(absenteeismA)
absenteeism <- read.csv("C:/Users/User-Dell/Desktop/absenteeism.csv")
View(absenteeism)
data<-absenteeism
View(data)
str(data)
install.packages("rlang")
install.packages("dplyr")
library(dplyr)
data<-filter(data, Transportation.expense<500)
boxplot(data$Transportation.expense)
data<-filter(data, Transportation.expense<350)
boxplot(data$Distance.from.Residence.to.Work)
data<-filter(data, Service.time<25)
data<-filter(data, Age<55)
data<-filter(data,Work.load.Average.day<350)
data<-filter(data,Height<175 & Height>165)
data<-filter(data, Hit.target>85)
str(data)
install.packages("psych")
install.packages("psych")
install.packages("PerformanceAnalytics", type = "binary", dependencies = TRUE, repos = "https://cloud.r-project.org")
library("PerformanceAnalytics")
install.packages("psych")
library(psych)
pairs.panels(data[c(-16)],cex.cor = 2)
pairs.panels(data[c(-16)],cex = 2)
pairs.panels(data[c(-16)])
pairs.panels(data)
rs_function <- function(x){(x-min(x))/(max(x)-min(x))}
trans_scale <- rs_function(data$Transportation.expense)
data$Transportation.expense <- trans_scale
dist_scale <- rs_function(data$Distance.from.Residence.to.Work)
data$Distance.from.Residence.to.Work<-dist_scale
service_scale <- rs_function(data$Service.time)
data$Service.time<-service_scale
age_scale <- rs_function(data$Age)
data$Age<-age_scale
workload_scale <- rs_function(data$Work.load.Average.day)
data$Work.load.Average.day<-workload_scale
hit_scale <- rs_function(data$Hit.target)
data$Hit.target<-hit_scale
height_scale <- rs_function(data$Height)
data$Height<-height_scale
bmi_scale <- rs_function(data$Body.mass.index)
data$Body.mass.index<-bmi_scale
children_scale <- rs_function(data$Children)
data$Children<-children_scale
pet_scale <- rs_function(data$Pet)
data$Pet<-pet_scale
weight_scale <- rs_function(data$Weight)
data$Weight<-weight_scale
absent_scale <- rs_function(data$Absenteeism.time.in.hours)
data$Absenteeism.time.in.hours<-absent_scale
pairs.panels(data[c(-7,-8,-10,-16)],cex = 2)
data=data[-13]
data<-data[-13]
View(absenteeism)
data_ab<-absenteeism
> data_ab<-filter(data_ab, Transportation.expense<350)
data_ab<-filter(data_ab, Transportation.expense <350)
data_ab<-filter(data_ab,Transportation.expense<350 )
View(data_ab)
data_ab<-filter(data_ab, Service.time<25)
data_ab<-filter(data_ab, Age<55)
data_ab<-filter(data_ab,Work.load.Average.day<350)
data_ab<-filter(data_ab,Height<175 & Height>165)
data_ab<-filter(data_ab, Hit.target>85)
rs_function <- function(x){(x-min(x))/(max(x)-min(x))}
trans_scale <- rs_function(data_ab$Transportation.expense)
> data_ab$Transportation.expense <- trans_scale
data_ab$Transportation.expense <- trans_scale
dist_scale <- rs_function(data_ab$Distance.from.Residence.to.Work)
data_ab$Distance.from.Residence.to.Work<-dist_scale
service_scale <- rs_function(data_ab$Service.time)
data_ab$Service.time<-service_scale
age_scale <- rs_function(data_ab$Age)
data_ab$Age<-age_scale
workload_scale <- rs_function(data_ab$Work.load.Average.day)
data_ab$Work.load.Average.day<-workload_scale
hit_scale <- rs_function(data_ab$Hit.target)
height_scale <- rs_function(data_ab$Height)
data_ab$Height<-height_scale
bmi_scale <- rs_function(data_ab$Body.mass.index)
data_ab$Body.mass.index<-bmi_scale
children_scale <- rs_function(data_ab$Children)
data_ab$Children<-children_scale
pet_scale <- rs_function(data_ab$Pet)
data_ab$Pet<-pet_scale
weight_scale <- rs_function(data_ab$Weight)
data_ab$Weight<-weight_scale
absent_scale <- rs_function(data_ab$Absenteeism.time.in.hours)
data_ab$Absenteeism.time.in.hours<-absent_scale
data_ab$Hit.target<-hit_scale
mdata<-data_ab[-13]
View(mdata)
install.packages("caret")
install.packages(glment)
install.packages("glment")
install.packages("Metrics")
install.packages("caret")
install.packages("glment")
install.packages("glmnet")
install.packages("mlbench")
library(glmnet)
library(mlbench)
library(caret)
set.seed(222)
ind<-sample(2,nrow(mdata),replace=T, prob = c(0.7,0.3))
train<-mdata[ind==1]
train<-mdata[ind==1,]
test<-mdata[ind==2,]
custom<-trainControl(method="repeatedcv",number=10, repeats=5,verboseIter = T)
set.seed(1234)
lm<-train(Absenteeism.time.in.hours~.,train,method ="lm", trControl = custom)
lm$results
lm
summary(lm)
plot(lm$finalModel)
set.seed(1234)
ridge<-train(Absenteeism.time.in.hours~.,train, method = "glmnet", tuneGrid =expand.grid(alpha=0,lambda = seq(0.0001, 1, length=5)), trControl = custom)
plot(ridge)
ridge
plot(ridge$finalModel,xvar = "lambda",label = T)
plot(ridge$finalModel,xvar = "dev",label = T)
plot(varImp(ridge,scale = F))
plot(varImp(ridge,scale = T))
set.seed(1234)
lasso<-train(Absenteeism.time.in.hours~.,train, method = "glmnet", tuneGrid =expand.grid(alpha=1,lambda = seq(0.0001, 1, length=5)), trControl = custom)
plot(lasso)
lasso
plot(lasso$finalModel, xvar = "lambda", label=T)
plot(lasso$finalModel, xvar = "dev", label=T)
plot(varImp(lasso,scale = T))
plot(varImp(lasso, scale = F))
plot(varImp(lasso, scale = T))
warnings()
set.seed(1234)
elastic<-train(Absenteeism.time.in.hours~.,train, method = "glmnet", tuneGrid =expand.grid(alpha=seq(0,1, length =10),lambda = seq(0.0001, 1, length=5)), trControl = custom)
plot(elastic)
elastic<-train(Absenteeism.time.in.hours~.,train, method = "glmnet", tuneGrid =expand.grid(alpha=seq(0,1, length =10),lambda = seq(0.0001, 0.2, length=5)), trControl = custom)
plot(elastic)
plot(elastic$finalModel, xvar = "lambda", label=T)
plot(elastic$finalModel, xvar = "dev", label=T)
plot(varImp(elastic, scale = T))
model_list<-list(LinearModel=lm, Ridge=ridge, Lasso=lasso, ElasticNet=elastic)
res<-resamples(model_list)
summary(res)
bwplot(res)
xyplot(res, metric = "RMSE")
xyplot(res, metric = "Rsquared")
elastic$bestTune
best<-elastic$finalModel
coef(best,s=elastic$bestTune$lambda)
savdRDS(elastic, "final_model.rds")
saveRDS(elastic, "final_model.rds")
fm<-readRDS("final_model.rds")
print(fm)
p1<-predict(fm,train)
sqrt(mean((train$Absenteeism.time.in.hours-p1)^2))
sqrt(mean((train$Absenteeism.time.in.hours)^2))
p2<-predict(fm,test)
sqrt(mean((test$Absenteeism.time.in.hours-p2)^2))
